import matplotlib.pyplot as plt
import matplotlib.image as mpimg

def combine_idf_curves():
  """
  Combine four IDF curve images into a single figure with subplots.
  """
  # Load the images
  img_ann = mpimg.imread('./figures/idf_curves_ann.png')
  img_tcan = mpimg.imread('./figures/idf_curves_tcan.png')
  img_svm = mpimg.imread('./figures/idf_curves_svm.png')
  img_trad = mpimg.imread('./figures/idf_curves_trad.png')
  
  # Create a figure with 2x2 subplots
  fig, axes = plt.subplots(2, 2, figsize=(16, 12))
  fig.suptitle('Comparison of IDF Curves Generated by Different Methods', fontsize=16, fontweight='bold')
  
  # Display images in subplots
  axes[0, 0].imshow(img_ann)
  axes[0, 0].set_title('Neural Network (ANN)', fontsize=14)
  axes[0, 0].axis('off')
  
  axes[0, 1].imshow(img_tcan)
  axes[0, 1].set_title('TCAN', fontsize=14)
  axes[0, 1].axis('off')
  
  axes[1, 0].imshow(img_svm)
  axes[1, 0].set_title('Support Vector Machine (SVM)', fontsize=14)
  axes[1, 0].axis('off')
  
  axes[1, 1].imshow(img_trad)
  axes[1, 1].set_title('Gumbel Distribution (Traditional)', fontsize=14)
  axes[1, 1].axis('off')
  
  # Adjust layout to prevent overlap
  plt.tight_layout()
  plt.subplots_adjust(top=0.93)
  
  # Save the combined figure
  plt.savefig('./figures/combined_idf_curves.png', 
        dpi=300, bbox_inches='tight')
  plt.show()

if __name__ == "__main__":
  combine_idf_curves()